/*
STYLESHEET FOR SMARTGRAPH VISUALIZATION.

For your customization, please see:
https://openjfx.io/javadoc/19/javafx.graphics/javafx/scene/doc-files/cssref.html

And know that:
- The drawing area itself is of type Pane, which is an extension of Region;
- A vertex is of type Shape;
- The edges are of type Line and CubicLine;
- The labels are of type Text, and;
- The arrows are of type Path.

This should help you understand which styles you can apply.
*/

.graph {
    -fx-background-color: transparent;
    /* you can use -fx-background-image to set a background image */
}

.vertex {
    -fx-stroke-width: 3;
    -fx-stroke: #4a515f;
    -fx-stroke-type: inside; /* you should keep this if using arrows */
    -fx-fill: #75829b;
}

.vertex:hover { /* pseudo-classes also work */
    /*-fx-cursor: default; */ /* You can use this style to override the hand/move cursors while hovering. */
    -fx-stroke-width: 4;
}

.vertex-label {
    -fx-font: normal 14pt "Arial";
    -fx-font-smoothing-type: lcd;
    -fx-fill: black;
    -fx-effect: dropshadow( gaussian , rgba(0, 0, 0, 0.3) , 0 , 0, 0 , 0 ); 
    /* -fx-stroke: black; */
}

.initialVertex {
    fx-stroke-width: 3;
    -fx-stroke: #359452;
    -fx-stroke-type: inside; /* you should keep this if using arrows */
    -fx-fill: #72e097;
    
}

.finalVertex {
    fx-stroke-width: 3;
    -fx-stroke: #944035;
    -fx-stroke-type: inside; /* you should keep this if using arrows */
    -fx-fill: #e08872;
}

.selectedVertex {
    fx-stroke-width: 3;
    -fx-stroke: #355b94;
    -fx-stroke-type: inside; /* you should keep this if using arrows */
    -fx-fill: #72b4e0;
}

.pathVertex {
    -fx-stroke-width: 3;
    -fx-stroke: #fda359;
    -fx-stroke-type: inside; /* you should keep this if using arrows */
    -fx-fill: #fcc48f;
}

.edge {
    -fx-stroke-width: 2;
    -fx-stroke: #3b454e;  
    /* -fx-stroke-dash-array: 2 5 2 5; remove for clean lines */
    -fx-fill: transparent; /* important to keep for curved edges */
    -fx-stroke-line-cap: round;
    -fx-opacity: 0.8;
}

.edge:hover {
    -fx-stroke-width: 3;
}

.edge-label {
    -fx-font: normal 14pt "arial";
    -fx-font-smoothing-type: lcd;
    -fx-fill: black;
    -fx-effect: null;
    /* -fx-stroke: black; */
}

/* Since version 2.0.0-rc2 this style is cumulatively applied to arrows, after the "edge" class.
 * Use to, e.g., to remove the dash effect (that will not look good in arrows).
 * Afterwards, styles applied to the edges are propagated to the respective arrows. You can, however, apply
 * specific styles to the arrows programmatically. See example programs.
 */
.arrow {
    -fx-stroke-dash-array: none;
}
 .selectedEdge {
    -fx-stroke-width: 4;
    -fx-stroke: #6eb2ff;  
    -fx-fill: transparent; /* important to keep for curved edges */
    -fx-stroke-line-cap: round;
    -fx-opacity: 1;
}
 .pathEdge {
    -fx-stroke-width: 4;
    -fx-stroke: #fda359;  
    -fx-fill: transparent; /* important to keep for curved edges */
    -fx-stroke-line-cap: round;
    -fx-opacity: 1;
}
.arrowHead {
    -fx-stroke-width: 2;
    -fx-stroke: #3b454e;  
    /* -fx-stroke-dash-array: 2 5 2 5; remove for clean lines */
    -fx-fill: #3b454e; /* important to keep for curved edges */
    -fx-stroke-line-cap: round;
    -fx-opacity: 0.8;
}