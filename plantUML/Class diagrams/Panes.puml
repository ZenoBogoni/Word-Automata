@startuml
skinparam classAttributeIconSize 0
package Controller.panes {
    class GraphSidePane {
        - MainPane mainPane
        - SmartGraphPanel<String, String> graphView
        - DigraphEdgeList<String, String> graph
        - SmartGraphVertexNode<String> selectedVertexNode
        - SimpleBooleanProperty isVertexSelectedProperty
        - SimpleBooleanProperty confirmToApplyProperty
        - SimpleBooleanProperty initialvertexSetProperty
        - SimpleBooleanProperty isEdgeSelectedProperty
        - String lastVertexName
        - int edgeId
        - TextField vertexLabelTextField
        - TextField edgeLabelTextField
        - TextField testWordTextField
        - Button deleteVertexButton
        - Button deleteEdgeButton
        - Button testWordButton
        - Button destroyButton
        - RadioButton initialNodeRadioButton
        - RadioButton finalNodeRadioButton
        - Text vertexLabel
        - Text edgeLabel

        + GraphSidePane()
        + void initialize()
        - void updateRadioButtons()
        - void updateVertexName()
        - void updateEdgeName()
        - void testGraph()
        + void focusEdgeField()
        + void focusVertexField()
    } 
    class MagicLayoutSidePane {
        - TextField repulsiveForceTextField
        - TextField attractiveForceTextField
        - TextField attractionScaleTextField
        - TextField accellerationTextField
        - Slider repulsiveForceSlider
        - Slider attractiveForceSlider
        - Slider attractionScaleSlider
        - Slider accellerationSlider
        - Button applyButton
        - CheckBox autoLayoutCheckBox
        - final double defaultRepulsiveForce
        - final double defaultAttractiveForce
        - final double defaultAttractionScale
        - final double defaultAccelleration
        - SimpleDoubleProperty repulsiveForce
        - SimpleDoubleProperty attractiveForce
        - SimpleDoubleProperty attractionScale
        - SimpleDoubleProperty accelleration
        - Label applyLabel
        - ForceDirectedSpringGravityLayoutStrategy<String> springLayout

        + MagicLayoutSidePane()
        + void initialize()
        - void initForce(SimpleDoubleProperty force, Slider slider, TextField textField, double min, double max)
        - void updateForceValue(DoubleProperty force, TextField textField, double min, double max)
        - void fadeTextChange(Label label, String newText, double time)
        + void resetForcesToDefault()
        + ForceDirectedLayoutStrategy<String> getMagicLayout()
    } 
    class MainPane {
        - boolean isSideHidden
        - App app
        - DigraphEdgeList<String, String> graph
        - SmartGraphPanel<String, String> graphView
        - ContentZoomScrollPane graphPane
        - VBox centerPane
        - SolutionPane solutionPane
        - SimpleBooleanProperty isVertexSelectedProperty
        - SimpleBooleanProperty confirmToApplyProperty
        - SimpleBooleanProperty autoLayoutProperty
        - SimpleBooleanProperty clearTextOnClickProperty
        - IconButton nodeIcon
        - IconButton magicIcon
        - MagicLayoutSidePane magicLayoutSidePane
        - GraphSidePane graphSidePane
        - MenuBar menuBar
        - VBox sideMenuStatic
        - ScrollPane sideMenuHidable
        - HBox sideMenu
        - Menu file
        - Menu options
        - Menu help
        - CheckMenuItem theme
        - CheckMenuItem autoLayout
        - CheckMenuItem confirmToApply
        - CheckMenuItem clearTextOnClick
        - MenuItem exportGraph
        - MenuItem importGraph
        - MenuItem tutorial

        + MainPane(App app)
        + void initSceneReference()
        + void initMainPane()
        - void initializeFXMLVariables()
        - void initMenuBar()
        - void initGraph()
        - void initSideMenu()
        + void hideSidePane(VBox sidePane)
        + void setSidePane(VBox sidePane)
    }
    class SolutionPane {
        - HBox nodesHBox
        - ScrollPane nodesScrollPane

        + SolutionPane()
        + void initialize()
        + void insertVertexNode(SmartGraphVertexNode<String> vertexNode)
        + void insertEdgeNode(SmartGraphEdgeBase<String, String> edgeNode)
        + void clearHistory()
    }
    MainPane *--> SolutionPane
    MainPane *--> MagicLayoutSidePane
    MainPane *-right-> GraphSidePane

}
@enduml